{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","components/AccountBalance/AccountBalance.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","TdControls","Button","button","Coin","props","name","ticker","price","showBalance","balance","action","method","className","onClick","event","preventDefault","handleRefresh","tickerId","handleBuy","handleSell","Table","table","CoinList","coinData","map","key","Img","img","Title","h1","Header","header","ExchangeHeader","src","logo","alt","Component","Section1","section","BalanceButton","Balance","div","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","content","format","amount","handleBalanceVisibilityChance","handleBrrr","Div","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","ticketURL","newPrice","newCoinData","values","newValues","oldValue","oldBalance","valueChangeKey","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.47346aa7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Td = styled.td`\r\n  border: 1px solid #cccccc;\r\n  width: 16 vw;\r\n`;\r\nconst TdControls = styled(Td)`\r\n  width: 30vw;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 11px;\r\n  margin: 3px 5px 0;\r\n  width: 64px;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n  const handleRefresh = (event) => {\r\n    event.preventDefault();\r\n    props.handleRefresh(props.tickerId);\r\n  };\r\n\r\n  const handleBuyB = (event) => {\r\n    event.preventDefault();\r\n    props.handleBuy(props.tickerId);\r\n  };\r\n\r\n  const handleSellB = (event) => {\r\n    event.preventDefault();\r\n    props.handleSell(props.tickerId);\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <Td>{props.name}</Td>\r\n      <Td>{props.ticker}</Td>\r\n      <Td>${props.price}</Td>\r\n      {props.showBalance ? <Td>{props.balance}</Td> : null}\r\n\r\n      <TdControls>\r\n        <form action=\"#\" method=\"POST\">\r\n          <Button className=\"btn btn-info\" onClick={handleRefresh}>\r\n            Refresh\r\n          </Button>\r\n          <Button className=\"btn btn-light\" onClick={handleBuyB}>\r\n            Buy\r\n          </Button>\r\n          <Button className=\"btn btn-secondary\" onClick={handleSellB}>\r\n            Sell\r\n          </Button>\r\n        </form>\r\n      </TdControls>\r\n    </tr>\r\n  );\r\n}\r\n\r\nCoin.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  ticker: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport Coin from \"../Coin/Coin\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Table = styled.table`\r\n  margin: 10px 10px 50px 50px;\r\n  display: inline-block;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n  return (\r\n    <Table className=\"table table-primary table-unbordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Ticker</th>\r\n          <th>Price</th>\r\n          {props.showBalance ? <th>Balance</th> : null}\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.coinData.map(({ key, name, ticker, price, balance }) => (\r\n          <Coin\r\n            key={key}\r\n            handleRefresh={props.handleRefresh}\r\n            handleSell={props.handleSell}\r\n            handleBuy={props.handleBuy}\r\n            name={name}\r\n            ticker={ticker}\r\n            price={price}\r\n            balance={balance}\r\n            showBalance={props.showBalance}\r\n            tickerId={key}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Img = styled.img`\r\n  height: 8rem;\r\n  pointer-events: none;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 4rem;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  background-color: #282c34;\r\n  min-height: 20vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  color: white;\r\n`;\r\n\r\nexport default class ExchangeHeader extends Component {\r\n  render() {\r\n    return (\r\n      <Header>\r\n        <Img src={logo} alt=\"React logo\" />\r\n        <Title> JP's Crypto Exchange </Title>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport \"bootswatch/dist/flatly/bootstrap.min.css\";\r\nimport \"@fortawesome/fontawesome-free/js/all\";\r\n\r\nconst Section1 = styled.section`\r\n  font-size: 2rem;\r\n  tex-align: center;\r\n  margin: 0 auto 2rem auto;\r\n  margin-bottom: 2rem;\r\n  line-height: 3rem;\r\n  text-align: left;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin: 0 8px;\r\n`;\r\n\r\nconst BalanceButton = styled(Button)`\r\n  width: 150px;\r\n`;\r\n\r\nconst Balance = styled.div`\r\n  min-width: 250px;\r\n  margin: 0.5rem 0 0 2.5rem;\r\n  font-size: 1.5em;\r\n  vertical-align: middle;\r\n`;\r\n\r\nvar formatter = Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n});\r\n\r\nexport default function AccountBalance(props) {\r\n  const buttonText = props.showBalance ? \"Hide Balance\" : \"Show Balance\";\r\n  const hbuttonText = \" Helicopter Money\";\r\n  let content = \"\\u00A0\";\r\n  if (props.showBalance) {\r\n    content = <> {formatter.format(props.amount)}</>;\r\n  }\r\n  const buttonClass = \"btn btn-primary\";\r\n\r\n  return (\r\n    <>\r\n      <Balance>{content}</Balance>\r\n\r\n      <Section1>\r\n        <BalanceButton\r\n          onClick={props.handleBalanceVisibilityChance}\r\n          className={buttonClass}\r\n        >\r\n          {buttonText}\r\n        </BalanceButton>\r\n        <Button className=\"btn btn-success\" onClick={props.handleBrrr}>\r\n          <i className=\"fa-solid fa-helicopter\"></i>\r\n          {hbuttonText}{\" \"}\r\n        </Button>\r\n      </Section1>\r\n    </>\r\n  );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n  amount: PropTypes.number.isRequired,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport CoinList from \"./components/CoinList/CoinList\";\nimport ExchangeHeader from \"./components/ExchangeHeader/ExchangeHeader\";\nimport AccountBalance from \"./components/AccountBalance/AccountBalance\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootswatch/dist/flatly/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/js/all\";\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: #152c5c;\n  color: #cccccc;\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = (price) => parseFloat(Number(price).toFixed(4));\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get(\"https://api.coinpaprika.com/v1/coins\");\n    const coinIds = response.data.slice(0, COIN_COUNT).map((coin) => coin.id);\n    const ticketURL = \"https://api.coinpaprika.com/v1/tickers/\";\n    const promises = coinIds.map((id) => axios.get(ticketURL + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function (response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    });\n\n    setCoinData(coinPriceData);\n  };\n\n  useEffect(function () {\n    if (coinData.length === 0) {\n      // component did mount\n      componentDidMount();\n    }\n  });\n\n  const handleBalanceVisibilityChance = () => {\n    setShowBalance((oldValue) => !oldValue);\n  };\n\n  const handleBrrr = () => {\n    setBalance((oldBalance) => oldBalance + 1000);\n  };\n\n  const handleBuy = (valueChangeKey) => {\n    const newCoinData = coinData.map((values) => {\n      let newValues = { ...values };\n      if (valueChangeKey === values.key) {\n        if (balance < newValues.price) {\n          alert(\"You dont have enough balance\");\n        } else {\n          newValues.balance += 1;\n          setBalance((balance) => formatPrice((balance -= newValues.price)));\n        }\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  };\n\n  const handleSell = (valueChangeKey) => {\n    const newCoinData = coinData.map((values) => {\n      let newValues = { ...values };\n      if (valueChangeKey === values.key) {\n        if (newValues.balance <= 0) {\n          alert(\"You dont have enough balance\");\n        } else {\n          newValues.balance -= 1;\n          setBalance((balance) => formatPrice((balance += newValues.price)));\n        }\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  };\n\n  const handleRefresh = async (valueChangeId) => {\n    const ticketURL = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}/`;\n    const response = await axios.get(ticketURL);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map(function (values) {\n      let newValues = { ...values };\n      if (valueChangeId === values.key) {\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  };\n\n  return (\n    <Div>\n      <ExchangeHeader />\n      <AccountBalance\n        amount={balance}\n        showBalance={showBalance}\n        handleBalanceVisibilityChance={handleBalanceVisibilityChance}\n        handleBrrr={handleBrrr}\n      />\n      <CoinList\n        coinData={coinData}\n        showBalance={showBalance}\n        handleBuy={handleBuy}\n        handleSell={handleSell}\n        handleRefresh={handleRefresh}\n      />\n    </Div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
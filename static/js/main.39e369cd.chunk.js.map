{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","components/AccountBalance/AccountBalance.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Coin","props","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleRefresh","tickerId","Table","table","CoinList","coinData","map","key","Img","img","Title","h1","Header","header","ExchangeHeader","src","logo","alt","Component","Section1","section","AccountBalance","buttonText","content","amount","handleBalanceVisibilityChance","Div","div","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","componentDidMount","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","ticketURL","newPrice","newCoinData","values","newValues","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.39e369cd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Td = styled.td`\r\n  border: 1px solid #cccccc;\r\n  width: 25vh;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n\r\n    props.handleRefresh(props.tickerId);\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <Td>{props.name}</Td>\r\n      <Td>{props.ticker}</Td>\r\n      <Td>${props.price}</Td>\r\n      {props.showBalance ? <Td>${props.balance}</Td> : null}\r\n\r\n      <Td>\r\n        <form action=\"#\" method=\"POST\">\r\n          <button onClick={handleClick}>Refresh</button>\r\n        </form>\r\n      </Td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nCoin.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  ticker: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport Coin from \"../Coin/Coin\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Table = styled.table`\r\n  margin: 50px auto 50px auto;\r\n  display: inline-block;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n  return (\r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Ticker</th>\r\n          <th>Price</th>\r\n          {props.showBalance ? <th>Balance</th> : null}\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.coinData.map(({ key, name, ticker, price, balance }) => (\r\n          <Coin\r\n            key={key}\r\n            handleRefresh={props.handleRefresh}\r\n            name={name}\r\n            ticker={ticker}\r\n            price={price}\r\n            balance={balance}\r\n            showBalance={props.showBalance}\r\n            tickerId={key}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Img = styled.img`\r\n  height: 8rem;\r\n  pointer-events: none;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 4rem;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  background-color: #282c34;\r\n  min-height: 20vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  color: white;\r\n`;\r\n\r\nexport default class ExchangeHeader extends Component {\r\n  render() {\r\n    return (\r\n      <Header>\r\n        <Img src={logo} alt=\"React logo\" />\r\n        <Title> Chompo's Coin Exchange </Title>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Section1 = styled.section`\r\n  font-size: 2rem;\r\n  tex-align: left;\r\n  padding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nexport default function AccountBalance(props) {\r\n  const buttonText = props.showBalance ? \"Hide Balance\" : \"Show Balance\";\r\n  let content = null;\r\n  if (props.showBalance) {\r\n    content = <> Balance: $ {props.amount}</>;\r\n  }\r\n  return (\r\n    <Section1>\r\n      {content}\r\n      <button onClick={props.handleBalanceVisibilityChance}>\r\n        {buttonText}\r\n      </button>\r\n    </Section1>\r\n  );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n  amount: PropTypes.number.isRequired,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport CoinList from \"./components/CoinList/CoinList\";\nimport ExchangeHeader from \"./components/ExchangeHeader/ExchangeHeader\";\nimport AccountBalance from \"./components/AccountBalance/AccountBalance\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: #152c5c;\n  color: #cccccc;\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = (price) => parseFloat(Number(price).toFixed(4));\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get(\"https://api.coinpaprika.com/v1/coins\");\n    const coinIds = response.data.slice(0, COIN_COUNT).map((coin) => coin.id);\n    const ticketURL = \"https://api.coinpaprika.com/v1/tickers/\";\n    const promises = coinIds.map((id) => axios.get(ticketURL + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function (response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    });\n\n    setCoinData(coinPriceData);\n  };\n\n  useEffect(function () {\n    if (coinData.length === 0) {\n      // component did mount\n      componentDidMount();\n    }\n  });\n\n  const handleBalanceVisibilityChance = () => {\n    setShowBalance((oldValue) => !oldValue);\n  };\n  const handleRefresh = async (valueChangeId) => {\n    const ticketURL = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}/`;\n    const response = await axios.get(ticketURL);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map(function (values) {\n      let newValues = { ...values };\n      if (valueChangeId === values.key) {\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  };\n\n  return (\n    <Div>\n      <ExchangeHeader />\n      <AccountBalance\n        amount={balance}\n        showBalance={showBalance}\n        handleBalanceVisibilityChance={handleBalanceVisibilityChance}\n      />\n      <CoinList\n        coinData={coinData}\n        showBalance={showBalance}\n        handleRefresh={handleRefresh}\n      />\n    </Div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}